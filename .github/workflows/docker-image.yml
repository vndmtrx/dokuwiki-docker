name: Docker Build and Security Pipeline

on:
  release:
    types: [published]

jobs:
  prepare:
    name: 🔧 Prepare Environment
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
      
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          buildkitd-flags: --debug
    outputs:
      date: ${{ steps.date.outputs.date }}
      
  auth:
    name: 🔐 Authentication
    needs: prepare
    runs-on: ubuntu-latest
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

  metadata:
    name: 📋 Extract Metadata
    needs: auth
    runs-on: ubuntu-latest
    steps:
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: vndmtrx/dokuwiki
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=raw,value=latest
    outputs:
      tags: ${{ steps.meta.outputs.tags }}

  build:
    name: 🏗️ Build and Push
    needs: [auth, metadata]
    runs-on: ubuntu-latest
    steps:
      - name: Build and Push Image
        id: build
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ needs.metadata.outputs.tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
    outputs:
      image: vndmtrx/dokuwiki:latest

  security-scan:
    name: 🔒 Trivy Security Scan
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ needs.build.outputs.image }}
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          severity: 'CRITICAL,HIGH'
          
      - name: Generate Trivy SARIF report
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ needs.build.outputs.image }}
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL,HIGH,MEDIUM'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'

  notify:
    name: 📢 Notify
    needs: [build, security-scan]
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Check Status
        if: needs.build.result == 'success' && needs.security-scan.result == 'success'
        run: echo "Build, publish and security scan completed successfully!"
      
      - name: Notify Failure
        if: needs.build.result != 'success' || needs.security-scan.result != 'success'
        run: |
          echo "There was a failure in the build, publish or security scanning process"
          exit 1