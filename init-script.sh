#!/usr/bin/env bash

# Initialization script for DokuWiki
# Configures local.php, creates superadmin, and removes install.php if configured

set -euo pipefail

# Function to add or update a configuration in local.php
update_config() {
    local key="$1"
    local value="$2"
    local file="/dokuwiki/conf/local.php"
    
    # Create file if it doesn't exist
    if [ ! -f "$file" ]; then
        {
            echo "<?php"
            echo "// DokuWiki local configuration file"
            echo "// Generated by initialization script"
        } > "$file"
    fi
    
    if grep -q "^\$conf\['${key}'\]" "$file"; then
        sed -i "s/^\$conf\['${key}'\].*$/\$conf['${key}'] = ${value};/" "$file"
    else
        echo "\$conf['${key}'] = ${value};" >> "$file"
    fi
}

# Add ACL configuration based on policy
setup_acl_policy() {
    local policy="${DOKUWIKI_ACL_POLICY:-open}"
    local acl_file="/dokuwiki/conf/acl.auth.php"

    case "${policy}" in
        "open")
            # Full access for everyone
            echo "*               @ALL          16" > "$acl_file"
            ;;
        "public")
            # Read for everyone, write for registered users
            {
                echo "*               @ALL          1"
                echo "*               @user         8"
            } > "$acl_file"
            ;;
        "closed")
            # Access only for registered users
            echo "*               @user         15" > "$acl_file"
            ;;
        *)
            echo "Invalid ACL policy: $policy. Using 'open' as default." >&2
            echo "*               @ALL          16" > "$acl_file"
            ;;
    esac
}

# Configure ACL policy
setup_acl_policy

# Flag to check if basic configurations were provided
config_provided=false

# Configurations passed as environment variables
declare -A config_vars=(
    ["DOKUWIKI_TITLE"]="title"
    ["DOKUWIKI_LANG"]="lang"
    ["DOKUWIKI_LICENSE"]="license"
    ["DOKUWIKI_TAGLINE"]="tagline"
    ["DOKUWIKI_BASEURL"]="baseurl"
    ["DOKUWIKI_USEACL"]="useacl"
    ["DOKUWIKI_DISABLEACTIONS"]="disableactions"
    ["DOKUWIKI_AUTHTYPE"]="authtype"
    ["DOKUWIKI_DEFAULTGROUP"]="defaultgroup"
)

# Check if any configuration was provided
for env_var in "${!config_vars[@]}"; do
    if [ -n "${!env_var:-}" ]; then
        update_config "${config_vars[$env_var]}" "'${!env_var}'"
        config_provided=true
    fi
done

# Superadmin configuration
if [ -n "${DOKUWIKI_SUPERUSER:-}" ] && [ -n "${DOKUWIKI_SUPERPASS:-}" ] && 
   [ -n "${DOKUWIKI_FULLNAME:-}" ] && [ -n "${DOKUWIKI_EMAIL:-}" ]; then
    
    update_config "superuser" "'@admin'"
    
    # Generate bcrypt hash for the password
    hashed_password=$(php -r "echo password_hash('${DOKUWIKI_SUPERPASS}', PASSWORD_BCRYPT);")
    
    # Add user to users.auth.php
    {
        echo -n "${DOKUWIKI_SUPERUSER}:${hashed_password}:"
        echo "${DOKUWIKI_FULLNAME}:${DOKUWIKI_EMAIL}:admin,user"
    } >> "/dokuwiki/conf/users.auth.php"
    
    config_provided=true
fi

# Remove install.php only if basic configurations were provided
if [ "$config_provided" = true ] && [ -f "/var/www/html/install.php" ]; then
    rm "/var/www/html/install.php"
    echo "install.php removed for security." >&2
fi

# Run Apache in the foreground
exec apache2-foreground